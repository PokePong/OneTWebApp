@using OneTWebApp.Client.Models
@using MudBlazor
@rendermode InteractiveAuto
@inject IDialogService DialogService
@inject HttpClient _httpClient

@* Required *@
<MudThemeProvider/>
<MudPopoverProvider/>

@* Needed for dialogs *@
<MudDialogProvider/>

@* Needed for snackbars *@
<MudSnackbarProvider/>

<MudExpansionPanels Class="mt-12">
    @foreach (var type in _types) {
        <MudExpansionPanel>
            <TitleContent>
                <AppPanel Type="type"/>
            </TitleContent>
            <ChildContent>
                @if (_instances != null) {
                    <MudStack Spacing="2">
                        @foreach (var instance in GetInstance(type)!) {
                            <InstancePanel InstanceModelDTO="instance"/>
                        }
                    </MudStack>
                }
            </ChildContent>
        </MudExpansionPanel>
    }
</MudExpansionPanels>

@code {

    private AppType[] _types = [AppType.Docs, AppType.Meet];

    private List<InstanceModelDTO>? _instances;

    protected override async Task OnInitializedAsync() {
        await base.OnInitializedAsync();

        _instances = await _httpClient.GetFromJsonAsync<List<InstanceModelDTO>>("api/Instance");
    }

    private List<InstanceModelDTO>? GetInstance(AppType type) {
        return _instances?.Where(dto => dto.AppType == type).ToList();
    }

}