@using OneTWebApp.Client.Models
@using MudBlazor
@rendermode InteractiveAuto

@inject HttpClient _httpClient

<MudExpansionPanels>
    @foreach (var type in _types) {
        <MudExpansionPanel>
            <TitleContent>
                <AppPanel Type="type"/>
            </TitleContent>
            <ChildContent>
                <MudStack Spacing="2">
                    @if (_instances != null) {
                        @foreach (var instance in GetInstances(type)!) {
                            <InstancePanel InstanceModelDTO="instance"/>
                        }
                    }
                </MudStack>
            </ChildContent>
        </MudExpansionPanel>
    }
</MudExpansionPanels>

@* <MudButton @onclick="OpenDialogAsync" Variant="Variant.Filled" Color="Color.Primary"> *@
@*     Open simple dialog *@
@* </MudButton> *@

@code {

    private AppType[] _types = [AppType.Docs, AppType.Meet];

    private List<InstanceModelDTO>? _instances;

    private List<InstanceModelDTO>? InstanceDocs => _instances?.Where(dto => dto.AppType == AppType.Docs).ToList();

    protected override async Task OnInitializedAsync() {
        await base.OnInitializedAsync();

        _instances = await _httpClient.GetFromJsonAsync<List<InstanceModelDTO>>("api/instance");
    }

    private List<InstanceModelDTO>? GetInstances(AppType type) {
        return _instances?.Where(dto => dto.AppType == type).ToList();
    }

    // private Task OpenDialogAsync() {
    //     var options = new DialogOptions { CloseOnEscapeKey = true };
    //
    //     return DialogService.ShowAsync<DialogUsageExample_Dialog>("Simple Dialog", options);
    // }

}